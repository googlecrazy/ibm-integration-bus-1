



CREATE COMPUTE MODULE OrderList2PurchaseData_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();

		SET OutputRoot.DFDL.PurchaseData.InvoiceCount = InputBody.OrderList.InvoiceCount;
		SET OutputRoot.DFDL.PurchaseData.ItemCount = InputBody.OrderList.ItemCount;

		DECLARE TotalQuantity INTEGER 0;
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputBody.OrderList.SaleList.Invoice[]);
		WHILE I <= J DO
			SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].CustomerInitial[1] = InputBody.OrderList.SaleList.Invoice[I].InvoiceHeader.CustomerInitial[1];
			SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].CustomerInitial[2] = InputBody.OrderList.SaleList.Invoice[I].InvoiceHeader.CustomerInitial[2];
			SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Surname = InputBody.OrderList.SaleList.Invoice[I].InvoiceHeader.Surname;

			DECLARE K INTEGER 1;
			DECLARE L INTEGER;
			SET L = CARDINALITY(InputBody.OrderList.SaleList.Invoice[I].Items.Item[]);

			WHILE K <= L DO
				DECLARE OutputItem ROW;

				SET OutputItem = THE (
				SELECT Inv.ItemType
				, Inv.ItemCode
				, Inv.Description
				, Inv.Price
				, Inv.Category
				, It.Quantity
				FROM InputBody.OrderList.SaleList.Invoice[I].Items.Item[K] AS It
				, InputBody.OrderList.Inventory.Item[] AS Inv
				WHERE Inv.ItemCode = It.ItemCode
				AND Inv.ItemCode = InputBody.OrderList.SaleList.Invoice[I].Items.Item[K].ItemCode
				);

				IF OutputItem.ItemType = '1' THEN
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].ItemType = OutputItem.ItemType;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item1.itemCode = 'AA';
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item1.Description = OutputItem.Description;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item1.Price = OutputItem.Price;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item1.Category = OutputItem.Category;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item1.Quantity = OutputItem.Quantity;
				ELSE
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].ItemType = OutputItem.ItemType;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item2.ItemCode = OutputItem.ItemCode;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item2.Colour = OutputItem.Description;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item2.Price = OutputItem.Price;
					SET OutputRoot.DFDL.PurchaseData.SaleList.Invoice[I].Items[K].Item2.Quantity = OutputItem.Quantity;

				END IF;

				SET TotalQuantity = TotalQuantity + OutputItem.Quantity;
				SET K = K + 1;
			END WHILE;

			SET I = I + 1;
		END WHILE;
		--Trailer
		SET OutputRoot.DFDL.PurchaseData.Trailer.TotalQuantity = TotalQuantity;

		IF EXISTS(InputBody.OrderList.PointOfSale1[]) THEN
			SET OutputRoot.DFDL.PurchaseData.Trailer.PointOfSaleType = '1';
		ELSE
			SET OutputRoot.DFDL.PurchaseData.Trailer.PointOfSaleType = '2';
		END IF;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;
END MODULE;		